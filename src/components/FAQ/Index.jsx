import { useState, useRef } from "react";
import "./FAQ.css";
import { BsChevronDown } from "react-icons/bs";

const faqs = [
  {
    id: 1,
    header: "I'm just starting with DMs. How will your tool help me?",
    text: `I will personally help you find leads and set up the system for you.
        Twool will create an initial message for every lead that maximizes the chances of being replied to.`,
  },
  {
    id: 2,
    header: "Will I be banned from Twitter for using your tool?",
    text: `Twitter provides the possibility to send messages programmatically through their API, so you won't be banned for using twool.

    Users are banned for sending mass messages that look spammy. Messages generated by twool are best for generating positive responses so our users never get banned.`,
  },
  {
    id: 3,
    header:
      "Other tools also offer advanced search and personalization. What makes your tool unique?",
    text: `twool is the only tool that offers advanced search by user's topics and interests, language, country, and more.

    Personalization offered by other tools is often limited to inserting the lead's first name. The result is that you're sending a bleak message to everyone, meaning to no one at all.
    
    twool sends a truly unique message to every user based on their profile. This helps you to establish a connection and proceed with your sales process.`,
  },
];

const AccordionItem = (props) => {
  const contentEl = useRef();
  const { handleToggle, active, faq } = props;
  const { header, id, text } = faq;

  return (
    <div className="faq-card" >
      <div className="faq-header">
        <div
          className={`rc-accordion-toggle ${active === id ? "active" : ""}`}
          onClick={() => handleToggle(id)}
        >
          <h5 className="rc-accordion-title">{header}</h5>
          <BsChevronDown size={30} color="#727E8C"/>
        </div>
      </div>
      <div
        ref={contentEl}
        className={`rc-collapse ${active === id ? "show" : ""}`}
        style={
          active === id
            ? { height: contentEl.current.scrollHeight }
            : { height: "0px" }
        }
      >
        <div className="rc-accordion-body">
            {text.split("\n").map((line,index) => <p key={index}>{line}</p>)}
        </div>
      </div>
    </div>
  );
};

const Accordion = () => {
  const [active, setActive] = useState(null);

  const handleToggle = (index) => {
    if (active === index) {
      setActive(null);
    } else {
      setActive(index);
    }
  };

  return (
    <>
      <div className="faq-section">
        <h2> Frequently Asked Questions</h2>
        {faqs.map((faq, index) => {
          return (
            <AccordionItem
              key={faq.id}
              active={active}
              handleToggle={handleToggle}
              faq={faq}
            />
          );
        })}
      </div>
    </>
  );
};

export default Accordion;
